# Production-optimized AUREA Orchestrator API Dockerfile
FROM python:3.11-slim AS builder

# Build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy requirements first for better caching
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Production image
FROM python:3.11-slim

# Runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 aurea && \
    mkdir -p /app && \
    chown -R aurea:aurea /app

WORKDIR /app

# Copy Python packages from builder
COPY --from=builder --chown=aurea:aurea /root/.local /home/aurea/.local

# Copy application code
COPY --chown=aurea:aurea app app
COPY --chown=aurea:aurea shared shared
COPY --chown=aurea:aurea migrations migrations

# Environment optimizations
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH=/home/aurea/.local/bin:$PATH \
    PORT=8000

USER aurea

# Health check with proper intervals for production
HEALTHCHECK --interval=10s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Expose port
EXPOSE ${PORT}

# Start with multiple workers for production
CMD ["sh", "-c", "uvicorn app.api.main:app --host 0.0.0.0 --port ${PORT} --workers ${WORKER_COUNT:-2} --loop uvloop"]